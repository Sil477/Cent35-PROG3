@charset "UTF-8";
.btn, .btn-2 {
  border: none;
  padding: 0.25rem 0.5rem;
  color: #2b2b2b;
}
.btn:hover, .btn-2:hover {
  background-color: cyan;
  color: red;
  cursor: pointer;
}

/* todos los archivos que tengan una "_" delante, no se van a compilar, para
que funcione, se tienen que importar los datos en el SCSS principal.
En los proyectos reales, se le suele llamar "index.css" */
.btn-2 {
  margin: 0.5rem;
  border-radius: 0.25rem;
}

/* 1º CLASE: */
/* para reutilizar código: mixin */
/* como mixin es una especie de función, puedo pasarle un parámetro como
si fuera una variable. Se le puede asignar un valor por defecto a dicho
parámetro tambien indicando su valor en los paréntesis detrás del nombre
de la función */
/* así se declaran las variables aquí */
body {
  padding: 0;
  margin: 0;
}

.container {
  width: 100%;
  background-color: blanchedalmond;
  min-height: 100vh;
  padding: 0.5rem;
}

h1 {
  margin: 0;
  width: 50rem;
  color: #2b2b2b;
  text-transform: uppercase;
  background-color: #f1f1f1;
  /* para utilizar lo del mixin */
}

p {
  width: 50rem;
  color: #2b2b2b;
  text-transform: uppercase;
  background-color: #666666;
}

/* FORMA 1 de acceder a los li dentro del ul dentro del div con clase listado:
div.listado ul li {
    list-style: none;
} */
/* FORMA 2: no se puede hacer así en CSS, pero sí en SCSS */
.listado {
  width: 10rem;
  padding: 0.5rem;
  background-color: aquamarine;
}
.listado ul {
  margin: 0 0.5rem;
}
.listado ul li {
  list-style: none;
  /* FORMA de hacer hover en SCSS: */
}
.listado ul li:hover {
  color: white;
  cursor: pointer;
}

/* FORMA de hacer hover en CSS 
.listado ul li:hover {

}*/
/* @debug pasa por la terminal lo que le digamos */
/* @debug ayuda a verlo en pantalla */
/* después de las últimas versiones, en vez de import, se utilizan otras
funciones propias de sass: @use y @forward */
/* hasta ahora hemos estado compilando constantemente CSS con SCSS, pero no
hemos usado el dart sass */
/* otros: *//*# sourceMappingURL=styles.css.map */